<UserControl x:Class="pokeone_plus.LogWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:pokeone_plus"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             Height="auto" Width="auto" 
             Background="#252526" 
             BorderBrush="#3E3E42" 
             GotFocus="UserControl_GotFocus" LostFocus="UserControl_LostFocus">
    <UserControl.Resources>

        <Color x:Key="lightBlueColor">#FF145E9D</Color>
        <Color x:Key="darkBlueColor">#FF022D51</Color>
        <Color x:Key="redColor">#FFAA2C27</Color>
        <Color x:Key="greenColor">#FF656A03</Color>
        <Color x:Key="brownColor">#FF513100</Color>
        <SolidColorBrush x:Key="redBrush"
                         Color="{StaticResource redColor}"/>
        <SolidColorBrush x:Key="greenBrush"
                         Color="{StaticResource greenColor}"/>
        <SolidColorBrush x:Key="brownBrush"
                         Color="{StaticResource brownColor}"/>

        <LinearGradientBrush x:Key="menuBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF3A60AD" Offset="0.528"/>
            <GradientStop Color="#FF6A85D8" Offset="0.01"/>
            <GradientStop Color="#FF3464C4" Offset="1"/>
            <GradientStop Color="#FF202E7E" Offset="1"/>

        </LinearGradientBrush>
        <Style TargetType="{x:Type MenuItem}" x:Key="NoBorderMenu">
            <Setter Property="Background" Value="{StaticResource menuBrush}"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"  BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,1,0" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="*"/>
                                    <ColumnDefinition x:Name="Col4" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1"  
                                Margin="{TemplateBinding Padding}"  
                                x:Name="HeaderHost"  
                                RecognizesAccessKey="True"  
                                ContentSource="Header" VerticalAlignment="Center"/>
                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2"  
                                        Margin="8,1,8,1"  
                                        x:Name="IGTHost"  
                                        ContentSource="InputGestureText"  
                                        VerticalAlignment="Center"/>
                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <!--<Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>-->
                                    <Path Visibility="Hidden" x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" RenderTransformOrigin="0.5,0.5" Margin="0,-0.063,2,0.062" d:LayoutOverrides="Height">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="88.864"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup  IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" x:Name="SubMenuPopup" Focusable="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" Background="#1B1B1C" BorderBrush="#1B1B1C" BorderThickness="0" Padding="1,1,1,1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True"  >
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel Background="#1B1B1C" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Style="{x:Null}" Grid.IsSharedSizeScope="True" >
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Width" Value="110" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>
                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="False">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="BorderBrush" Value="#ffffff" />
                                <Setter Property="Foreground" Value="Red"  />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                                <Setter Property="BorderBrush" Value="#ffffff" />
                                <Setter Property="Foreground" Value="Red"  />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type Menu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Name="MainBorder" BorderThickness="1,1,1,1" Margin="0,0,1,0">
                            <WrapPanel ClipToBounds="True"
                        Orientation="Horizontal"
                        IsItemsHost="True" />
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border x:Name="Header" Grid.Row="0" Background="#2D2D30" BorderBrush="{x:Null}" BorderThickness="1" Height="21" VerticalAlignment="Top" GotFocus="UserControl_GotFocus" LostFocus="UserControl_LostFocus">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Menu Grid.Column="1" Margin="50 0 4 0" HorizontalAlignment="Right" Width="20" Background="{x:Null}" BorderBrush="{x:Null}">
                    <MenuItem x:Name="MenuPosition" BorderThickness="0" Style="{StaticResource NoBorderMenu}" Foreground="#F1F1F1" Width="20">
                        <MenuItem.Header>
                            <fa:FontAwesome x:Name="HiderIcon" Icon="AngleDown" Margin="-25 0 0 0" />
                        </MenuItem.Header>
                        <MenuItem.ToolTip>
                            <ToolTip Background="#1E1E1E">
                                <TextBlock x:Name="HiderText" Background="#1E1E1E" Foreground="#F1F1F1" Text="Hide"/>
                            </ToolTip>
                        </MenuItem.ToolTip>
                    </MenuItem>
                </Menu>
                <TextBlock Margin="5 0 0 0" Grid.Column="0" Text="Window Name" x:Name="WindowName" Foreground="#F1F1F1"/>
            </Grid>
        </Border>
        <RichTextBox Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" x:Name="MessageTextBox" 
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     AcceptsReturn="True"
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Height="auto" Foreground="#F1F1F1">
            <RichTextBox.Resources>
                <Style TargetType="{x:Type Paragraph}">
                    <Setter Property="Margin" Value="0"/>
                </Style>
                <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels"
          Value="True" />
                    <Setter Property="OverridesDefaultStyle"
          Value="true" />
                    <Setter Property="Focusable"
          Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border x:Name="Border"
                Margin="1"
                CornerRadius="2"
                BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderMediumColor}"
                                Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver" />
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                        <EasingColorKeyFrame KeyTime="0"
                                         Value="#4F4F4F" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0"
                                         Value="#3F3F46" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path x:Name="Arrow"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding Content, 
            RelativeSource={RelativeSource TemplatedParent}}" >
                                        <Path.Fill>
                                            <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                        </Path.Fill>
                                    </Path>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels"
          Value="True" />
                    <Setter Property="OverridesDefaultStyle"
          Value="true" />
                    <Setter Property="IsTabStop"
          Value="false" />
                    <Setter Property="Focusable"
          Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="Transparent" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels"
          Value="True" />
                    <Setter Property="OverridesDefaultStyle"
          Value="true" />
                    <Setter Property="IsTabStop"
          Value="false" />
                    <Setter Property="Focusable"
          Value="false" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border CornerRadius="2"
                Background="#4F4F4F" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="4"
            Background="Transparent" />
                        <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="20"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                        <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="1,0,1,0">
                                    <Thumb.BorderBrush>

                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent"
                                Offset="0.0" />
                                                    <GradientStop Color="Transparent"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Thumb.BorderBrush>
                                    <Thumb.Background>

                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent"
                                Offset="0.0" />
                                                    <GradientStop Color="Transparent"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Thumb.Background>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
                    </Grid>
                </ControlTemplate>

                <ControlTemplate x:Key="HorizontalScrollBar"
                 TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="18" />
                            <ColumnDefinition Width="0.00001*" />
                            <ColumnDefinition MaxWidth="18" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="4"
            Background="Transparent" />
                        <RepeatButton Grid.Column="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="10"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                        <Track x:Name="PART_Track"
           Grid.Column="1"
           IsDirectionReversed="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageLeftCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,1,0,1">

                                    <Thumb.BorderBrush>

                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent"
                                Offset="0.0" />
                                                    <GradientStop Color="Transparent"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Thumb.BorderBrush>
                                    <Thumb.Background>

                                        <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="Transparent"
                                Offset="0.0" />
                                                    <GradientStop Color="Transparent"
                                Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Thumb.Background>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageRightCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Column="3"
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="10"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z" />
                    </Grid>
                </ControlTemplate>

                <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
                    <Setter Property="SnapsToDevicePixels"
          Value="True" />
                    <Setter Property="OverridesDefaultStyle"
          Value="true" />
                    <Style.Triggers>
                        <Trigger Property="Orientation"
             Value="Horizontal">
                            <Setter Property="Width"
              Value="Auto" />
                            <Setter Property="Height"
              Value="10" />
                            <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
                        </Trigger>
                        <Trigger Property="Orientation"
             Value="Vertical">
                            <Setter Property="Width"
              Value="10" />
                            <Setter Property="Height"
              Value="Auto" />
                            <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </RichTextBox.Resources>
        </RichTextBox>
    </Grid>
</UserControl>
